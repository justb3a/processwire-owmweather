<?php namespace ProcessWire;

use Cmfcmf\OpenWeatherMap;
use Cmfcmf\OpenWeatherMap\Exception as OWMException;

/**
*
* TwigExtensions
*
* See README.md for usage instructions.
*
* @author Tabea David <info@justonestep.de>
* @version 0.0.1
* @copyright Copyright (c) 2017
* @see https://github.com/justonestep/processwire-weather
* @see https://www.processwire.com
* @see https://github.com/cmfcmf/OpenWeatherMap-PHP-Api
* @see https://www.openweathermap.org/
*/

/**
* Class OwmWeather
*/
class OwmWeather extends WireData implements Module {

  /**
   * Retrieves module meta data
   * Implementation of the Module interface
   *
   * @return array
   * @see http://processwire.com/apigen/class-Module.html
   */
  public static function getModuleInfo() {
    return array(
      'title' => 'OpenWeatherMap Weather',
      'summary' => 'Retrieve, parse and display weather data from OpenWeatherMap.org.',
      'version' => 001,
      'href' => 'https://github.com/justonestep/processwire-owmweather',
      'icon' => 'sun-o'
    );
  }

  /**
   * Multilingual support
   *
   * We support the following languages that you can use with the corresponded lang values:
   * Arabic - ar, Bulgarian - bg, Catalan - ca, Czech - cz, German - de, Greek - el, English - en, Persian (Farsi) - fa,
   * Finnish - fi, French - fr, Galician - gl, Croatian - hr, Hungarian - hu, Italian - it, Japanese - ja, Korean - kr,
   * Latvian - la, Lithuanian - lt, Macedonian - mk, Dutch - nl, Polish - pl, Portuguese - pt, Romanian - ro, Russian - ru,
   * Swedish - se, Slovak - sk, Slovenian - sl, Spanish - es, Turkish - tr, Ukrainian - ua, Vietnamese - vi,
   * Chinese Simplified - zh_cn, Chinese Traditional - zh_tw
   *
   * @see: http://openweathermap.org/current#multi
   */
  protected static $lingual = array(
    'ar', 'bg', 'ca', 'cz', 'de', 'el', 'en', 'fa', 'fi', 'fr', 'gl', 'hr', 'hu', 'it', 'ja', 'kr', 'la',
    'lt', 'mk', 'nl', 'pl', 'pt', 'ro', 'ru', 'se', 'sk', 'sl', 'es', 'tr', 'ua', 'vi', 'zh_cn', 'zh_tw'
  );

  /**
   * Initialize the module
   *
   * ProcessWire calls this when the module is loaded. For 'autoload' modules, this will be called
   * when ProcessWire's API is ready. As a result, this is a good place to attach hooks.
   */
  public function init() {
      require(/*NoCompile*/__DIR__ . '/vendor/autoload.php');
  }

  /**
   * Get weather
   * Access current weather data for any location on Earth
   *
   * @param string $city
   * @param string $lang
   * @return object
   */
  public function getWeather($city, $lang = null) {
    // try to determine language, fallback 'en'
    if (!$lang || !in_array($lang, self::$lingual)) {
      $lang = $this->user->language->name;
      if ($lang === 'default' || !in_array($lang, self::$lingual)) $lang = 'en';
    }

    $owm = new OpenWeatherMap($this->apikey);

    try {
        $weather = $owm->getWeather($city, $this->units, $lang);
    } catch(OWMException $e) {
        echo 'OpenWeatherMap exception: ' . $e->getMessage() . ' (Code ' . $e->getCode() . ').';
    } catch(\Exception $e) {
        echo 'General exception: ' . $e->getMessage() . ' (Code ' . $e->getCode() . ').';
    }

    return $weather;
  }

}
